---
# tasks file to start nextcloud container

- name: copy php.ini to {{ nextcloud_config_dir }}
  copy:
    src:  "php.ini"
    dest: "{{ nextcloud_config_dir }}/php.ini"
    owner: "{{ 82 if ( 'fpm' in docker_nextcloud_image ) else 33 }}"
    group: "{{ 82 if ( 'fpm' in docker_nextcloud_image ) else 33 }}"
    mode: 0644

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the nextcloud container"
  docker_container:
    name:           nextcloud
    image:          nextcloud:{{ docker_nextcloud_image | default('latest') }}
    restart_policy: always
    networks:
      - name: backend
    purge_networks: true
    links:
      - 'nextcloud-db:db'
      - 'redis:redis'
    volumes:
      - "{{ nextcloud_www_dir }}:/var/www/html"
      - "{{ nextcloud_config_dir }}:/var/www/html/config"
      - "{{ nextcloud_data_dir }}:{{ nextcloud_container_data_dir }}"
      - "{{ nextcloud_config_dir }}/php.ini:/usr/local/etc/php/php.ini"
    labels:
      "{{ nextcloud_traefik_label['nginx' if ( 'fpm' in docker_nextcloud_image ) else 'apache'] }}"
    state: "{{ state | default('started') }}"
  register: docker_result
    
- name: wait for nextcloud container to come up
  wait_for:
    delay: 10
    path: "{{ nextcloud_www_dir }}/lib/versioncheck.php"
  when: state is undefined or 'absent' not in state
